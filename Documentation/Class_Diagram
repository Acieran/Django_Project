@startuml
class Flower {
    - name : String
    - description : TextField
    - price : Double
    - image : Image
    - stock : Integer
    
    + FlowerListView()
    + FlowerDetailView(id: flower_id)
    + FlowerCreateView(all fields)
    + FlowerUpdateView(id: int, all fields)
    + FlowerDeleteView(id: int)
    + decrease_stock(id : flower_id, int: quantity)
}

class User {
    - first_name : String
    - last_name : String
    - phone : String
    - address : String
    - AdditionalInfo: String
    - Balance : Double
    - Is_Staff : Boolean

    + register_user{UserForm(fields all)}
    + login_user{AuthenticationForm(username,password)}
    + logout_user()
    + get_profile()
    + get_order_history() -> Order.get_orders()
    + get_users()
    + update_user(id : user_id){UserUpdateForm(fields all + is_staff - username - password)}
    + delete_user(id : user_id)
}

class Order {
    - user : User
    - order_date : Date
    - total_amount : Integer

    + get_orders(user: User) : List<Order>
    + get_order(Order: order_id) : Order, List<OrderItems>
    + create_order(FlowerCart: cart, User: user) : Order
    + order_update(Order: order_id)
    + delete_order(Order : order_id): void

    + place_order(Order: order, User: user) : void
}

class OrderItem {
    - order : Order
    - flower : Flower
    - quantity : int

    + get_order_items(Order: order_id, User: user) : List<OrderItems>
    + order_update(Order: order_id)
    + delete_order(Order: order_id): void
}

class FlowerCart {
    - user : User
    - flower : Flower
    - quantity : int

    + add_to_cart(Flower: flower_id)
    + remove_from_cart(Flower: flower_id)
    + cart()
}

Order *--* User
Order *-- Flower
OrderItem *--* Order
FlowerCart *-- Flower
FlowerCart *-- User
OrderItem *-- Flower

@enduml